\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename nael.info
@settitle Nael – A humble Emacs major-mode for Lean
@documentencoding UTF-8
@documentlanguage en
@c %**end of header

@dircategory Emacs misc features
@direntry
* Nael: (nael).         Major mode for Lean.
@end direntry

@finalout
@titlepage
@title Nael – A humble Emacs major-mode for Lean
@author Mekeor Melire
@end titlepage

@contents

@ifnottex
@node Top
@top Nael – A humble Emacs major-mode for Lean

Nael is an @strong{early-stage} package for GNU Emacs providing a humble
major-mode for the @uref{https://lean-lang.org/, Lean} programming-language and theorem-prover.

“Nael” is “Lean” reversed and ends in “el” as in Emacs-Lisp.
@end ifnottex

@menu
* Setup::
* History::
* Technical Comparison::
* License::
@end menu

@node Setup
@chapter Setup

@enumerate
@item
@uref{https://lean-lang.org/lean4/doc/setup.html, Install Lean}.
@item
Install Nael. For example, manually:
@enumerate
@item
Clone the Git repository.
@example
git clone https://codeberg.org/mekeor/nael.git ~/path/to/nael
@end example
@item
Set up @code{load-path}.
@lisp
(add-to-list 'load-path "~/path/to/nael")
@end lisp
@end enumerate
@item
Load Nael.  (Nael does not autoload anything.)
@lisp
(require 'nael)
@end lisp
@item
Optionally, configure Nael.
@lisp
(defun my-nael-setup ()
  (interactive)
  ;; Enable Emacs' built-in `TeX' input-method.  Alternatively, you
  ;; could install the external `unicode-math-input' package and
  ;; use the `unicode-math' input-method.
  (set-input-method "TeX")
  ;; Enable Emacs' built-in LSP-client Eglot.
  (eglot-ensure))

(add-hook 'nael-mode-hook #'my-nael-setup)

;; Nael buffer-locally sets `compile-command' to "lake build".
(keymap-set nael-mode-map "C-c C-c" #'project-compile)

;; Find out how to type the character at point in the current
;; input-method.
(keymap-set nael-mode-map "C-c C-k" #'quail-show-key)
@end lisp
@end enumerate

@node History
@chapter History

@enumerate
@item
@emph{Microsoft Corp.®} et al. developed @uref{https://github.com/leanprover-community/lean4-mode, lean4-mode} based on @uref{https://github.com/emacs-lsp/lsp-mode, lsp-mode}.
@item
@emph{Richard Copley} developed a @uref{https://github.com/bustercopley/lean4-mode, fork} based on Emacs' built-in @uref{https://www.gnu.org/software/emacs/manual/html_node/eglot/, Eglot}.
@item
@emph{Mekeor Melire} developed Nael which strives to be more humble by
relying on Emacs' built-in facilities, like Eglot, ElDoc and
Project.
@end enumerate

@node Technical Comparison
@chapter Technical Comparison

@itemize
@item
Nael does not depend on third-party lsp-mode.  Instead, you can
optionally use Nael together with Emacs' built-in LSP-client Eglot.
@item
Nael does not offer any special buffer for information on the
current goal etc.  Instead, Nael introduces two ElDoc documentation
functions which will show up in the usual ElDoc buffer.
@item
Nael does not offer any special mechanism to detect the current
project.  Instead, it introduces Lakefiles as Project root markers.
@item
Nael does not offer any special command to build the current
project.  Instead, it configures the built-in @code{project-compile}
command to work.
@item
Nael does not offer any special input-method.  Instead, you may use
the built-in @samp{TeX} input-method or the @samp{unicode-math} from the
external @uref{https://github.com/astoff/unicode-math-input.el, unicode-math-input} package.
@end itemize

@node License
@chapter License

This program is based on lean4-mode which is licensed under
Apache-2.0.  Additions and modifications made within this repository
are licensed under GNU General Public License version 3 or later.

@bye
